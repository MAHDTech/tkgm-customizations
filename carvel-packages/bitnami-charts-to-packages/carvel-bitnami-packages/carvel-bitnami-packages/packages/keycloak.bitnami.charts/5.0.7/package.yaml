---
apiVersion: data.packaging.carvel.dev/v1alpha1
kind: Package
metadata:
  name: keycloak.bitnami.charts.5.0.7
spec:
  refName: keycloak.bitnami.charts
  version: 5.0.7
  releaseNotes: |
        Keycloak is a high performance Java-based identity and access management solution. It lets developers add an authentication layer to their applications with minimum effort.
  valuesSchema:
    openAPIv3:
      title: "Chart Values"
      type: "object"
      properties: 
        global: 
          type: "object"
          properties: 
            imageRegistry: 
              type: "string"
              default: ""
              description: "Global Docker image registry"
            imagePullSecrets: 
              type: "array"
              default: "[]"
              description: "Global Docker registry secret names as an array"
            storageClass: 
              type: "string"
              default: ""
              description: "Global StorageClass for Persistent Volume(s)"
        kubeVersion: 
          type: "string"
          default: ""
          description: "Force target Kubernetes version (using Helm capabilities if not set)"
        nameOverride: 
          type: "string"
          default: ""
          description: "String to partially override keycloak.fullname"
        fullnameOverride: 
          type: "string"
          default: ""
          description: "String to fully override keycloak.fullname"
        hostAliases: 
          type: "array"
          default: "[]"
          description: "Add deployment host aliases"
        commonLabels: 
          type: "object"
          default: "{}"
          description: "Labels to add to all deployed objects"
        commonAnnotations: 
          type: "object"
          default: "{}"
          description: "Annotations to add to all deployed objects"
        clusterDomain: 
          type: "string"
          default: "cluster.local"
          description: "Default Kubernetes cluster domain"
        extraDeploy: 
          type: "array"
          default: "[]"
          description: "Array of extra objects to deploy with the release"
        image: 
          type: "object"
          properties: 
            registry: 
              type: "string"
              default: "docker.io"
              description: "Keycloak image registry"
            repository: 
              type: "string"
              default: "bitnami/keycloak"
              description: "Keycloak image repository"
            tag: 
              type: "string"
              default: "15.0.2-debian-10-r19"
              description: "Keycloak image tag (immutable tags are recommended)"
            pullPolicy: 
              type: "string"
              default: "IfNotPresent"
              description: "Keycloak image pull policy"
            pullSecrets: 
              type: "array"
              default: "[]"
              description: "Specify docker-registry secret names as an array"
            debug: 
              type: "boolean"
              default: false
              description: "Specify if debug logs should be enabled"
        auth: 
          type: "object"
          properties: 
            createAdminUser: 
              type: "boolean"
              default: true
              description: "Create administrator user on boot"
            adminUser: 
              type: "string"
              default: "user"
              description: "Keycloak administrator user"
            adminPassword: 
              type: "string"
              default: ""
              description: "Keycloak administrator password for the new user"
            managementUser: 
              type: "string"
              default: "manager"
              description: "Wildfly management user"
            managementPassword: 
              type: "string"
              default: ""
              description: "Wildfly management password"
            existingSecret: 
              type: "string"
              default: ""
              description: "An already existing secret containing auth info"
            existingSecretPerPassword: 
              type: "object"
              default: "{}"
              description: "Override `existingSecret` and other secret values"
            tls: 
              type: "object"
              properties: 
                enabled: 
                  type: "boolean"
                  default: false
                  description: "Enable TLS encryption"
                autoGenerated: 
                  type: "boolean"
                  default: false
                  description: "Generate automatically self-signed TLS certificates. Currently only supports PEM certificates"
                existingSecret: 
                  type: "string"
                  default: ""
                  description: "Existing secret containing the TLS certificates per Keycloak replica"
                truststoreFilename: 
                  type: "string"
                  default: ""
                  description: "Truststore specific filename inside the existing secret"
                keystoreFilename: 
                  type: "string"
                  default: ""
                  description: "Keystore specific filename inside the existing secret"
                jksSecret: 
                  type: "string"
                  default: ""
                  description: "DEPRECATED. Use `auth.tls.existingSecret` instead"
                keystorePassword: 
                  type: "string"
                  default: ""
                  description: "Password to access the keystore when it's password-protected"
                truststorePassword: 
                  type: "string"
                  default: ""
                  description: "Password to access the truststore when it's password-protected"
                resources: 
                  type: "object"
                  properties: 
                    limits: 
                      type: "object"
                      default: "{}"
                      description: "The resources limits for the TLS init container"
                    requests: 
                      type: "object"
                      default: "{}"
                      description: "The requested resources for the TLS init container"
        proxyAddressForwarding: 
          type: "boolean"
          default: false
          description: "Enable Proxy Address Forwarding"
        serviceDiscovery: 
          type: "object"
          properties: 
            enabled: 
              type: "boolean"
              default: false
              description: "Enable Service Discovery for Keycloak (required if `replicaCount` > `1`)"
            protocol: 
              type: "string"
              default: "kubernetes.KUBE_PING"
              description: "Sets the protocol that Keycloak nodes would use to discover new peers"
            properties: 
              type: "array"
              default: "[]"
              description: "Properties for the discovery protocol set in `serviceDiscovery.protocol` parameter"
            transportStack: 
              type: "string"
              default: "tcp"
              description: "Transport stack for the discovery protocol set in `serviceDiscovery.protocol` parameter"
        cache: 
          type: "object"
          properties: 
            ownersCount: 
              type: "number"
              default: 1
              description: "Number of nodes that will replicate cached data"
            authOwnersCount: 
              type: "number"
              default: 1
              description: "Number of nodes that will replicate cached authentication data"
        configuration: 
          type: "string"
          default: ""
          description: "Keycloak Configuration. Auto-generated based on other parameters when not specified"
        existingConfigmap: 
          type: "string"
          default: ""
          description: "Name of existing ConfigMap with Keycloak configuration"
        extraStartupArgs: 
          type: "string"
          default: ""
          description: "Extra default startup args"
        initdbScripts: 
          type: "object"
          default: "{}"
          description: "Dictionary of initdb scripts"
        initdbScriptsConfigMap: 
          type: "string"
          default: ""
          description: "ConfigMap with the initdb scripts (Note: Overrides `initdbScripts`)"
        command: 
          type: "array"
          default: "[]"
          description: "Override default container command (useful when using custom images)"
        args: 
          type: "array"
          default: "[]"
          description: "Override default container args (useful when using custom images)"
        extraEnvVars: 
          type: "array"
          default: "[]"
          description: "Extra environment variables to be set on Keycloak container"
        extraEnvVarsCM: 
          type: "string"
          default: ""
          description: "Name of existing ConfigMap containing extra env vars"
        extraEnvVarsSecret: 
          type: "string"
          default: ""
          description: "Name of existing Secret containing extra env vars"
        keycloakConfigCli: 
          type: "object"
          properties: 
            enabled: 
              type: "boolean"
              default: false
              description: "Whether to enable keycloak-config-cli"
            image: 
              type: "object"
              properties: 
                registry: 
                  type: "string"
                  default: "docker.io"
                  description: "keycloak-config-cli container image registry"
                repository: 
                  type: "string"
                  default: "bitnami/keycloak-config-cli"
                  description: "keycloak-config-cli container image repository"
                tag: 
                  type: "string"
                  default: "4.2.0-debian-10-r29"
                  description: "keycloak-config-cli container image tag"
                pullPolicy: 
                  type: "string"
                  default: "IfNotPresent"
                  description: "keycloak-config-cli container image pull policy"
                pullSecrets: 
                  type: "array"
                  default: "[]"
                  description: "keycloak-config-cli container image pull secrets"
            annotations: 
              type: "object"
              description: "Annotations for keycloak-config-cli job"
            command: 
              type: "array"
              default: "[]"
              description: "Command for running the container (set to default if not set). Use array form"
            args: 
              type: "array"
              default: "[]"
              description: "Args for running the container (set to default if not set). Use array form"
            hostAliases: 
              type: "array"
              default: "[]"
              description: "Job pod host aliases"
            resources: 
              type: "object"
              properties: 
                limits: 
                  type: "object"
                  default: "{}"
                  description: "The resources limits for the keycloak-config-cli container"
                requests: 
                  type: "object"
                  default: "{}"
                  description: "The requested resources for the keycloak-config-cli container"
            containerSecurityContext: 
              type: "object"
              properties: 
                enabled: 
                  type: "boolean"
                  default: true
                  description: "Enabled keycloak-config-cli containers' Security Context"
                runAsUser: 
                  type: "number"
                  default: 1001
                  description: "Set keycloak-config-cli container's Security Context runAsUser"
                runAsNonRoot: 
                  type: "boolean"
                  default: true
                  description: "Set keycloak-config-cli container's Security Context runAsNonRoot"
            podSecurityContext: 
              type: "object"
              properties: 
                enabled: 
                  type: "boolean"
                  default: true
                  description: "Enabled keycloak-config-cli pods' Security Context"
                fsGroup: 
                  type: "number"
                  default: 1001
                  description: "Set keycloak-config-cli pod's Security Context fsGroup"
            backoffLimit: 
              type: "number"
              default: 1
              description: "Number of retries before considering a Job as failed"
            podLabels: 
              type: "object"
              default: "{}"
              description: "Pod extra labels"
            podAnnotations: 
              type: "object"
              default: "{}"
              description: "Annotations for job pod"
            extraEnvVars: 
              type: "array"
              default: "[]"
              description: "Additional environment variables to set"
            extraEnvVarsCM: 
              type: "string"
              default: ""
              description: "ConfigMap with extra environment variables"
            extraEnvVarsSecret: 
              type: "string"
              default: ""
              description: "Secret with extra environment variables"
            extraVolumes: 
              type: "array"
              default: "[]"
              description: "Extra volumes to add to the job"
            extraVolumeMounts: 
              type: "array"
              default: "[]"
              description: "Extra volume mounts to add to the container"
            configuration: 
              type: "object"
              default: "{}"
              description: "keycloak-config-cli realms configuration"
            existingConfigmap: 
              type: "string"
              default: ""
              description: "ConfigMap with keycloak-config-cli configuration. This will override `keycloakConfigCli.config`"
        replicaCount: 
          type: "number"
          default: 1
          description: "Number of Keycloak replicas to deploy"
        containerPorts: 
          type: "object"
          default: "{}"
          description: "Keycloak container ports to open"
        podSecurityContext: 
          type: "object"
          properties: 
            enabled: 
              type: "boolean"
              default: true
              description: "Enabled Keykloak pods' Security Context"
            fsGroup: 
              type: "number"
              default: 1001
              description: "Set Keykloak pod's Security Context fsGroup"
        containerSecurityContext: 
          type: "object"
          properties: 
            enabled: 
              type: "boolean"
              default: true
              description: "Enabled Keykloak containers' Security Context"
            runAsUser: 
              type: "number"
              default: 1001
              description: "Set Keykloak container's Security Context runAsUser"
            runAsNonRoot: 
              type: "boolean"
              default: true
              description: "Set Keykloak container's Security Context runAsNonRoot"
        resources: 
          type: "object"
          properties: 
            limits: 
              type: "object"
              default: "{}"
              description: "The resources limits for the Keycloak container"
            requests: 
              type: "object"
              default: "{}"
              description: "The requested resources for the Keycloak container"
        livenessProbe: 
          type: "object"
          properties: 
            enabled: 
              type: "boolean"
              default: true
              description: "Enable livenessProbe"
            httpGet: 
              type: "object"
              properties: 
                path: 
                  type: "string"
                  default: "/auth/"
                  description: "Request path for livenessProbe"
                port: 
                  type: "string"
                  default: "http"
                  description: "Port for livenessProbe"
            initialDelaySeconds: 
              type: "number"
              default: 300
              description: "Initial delay seconds for livenessProbe"
            periodSeconds: 
              type: "number"
              default: 1
              description: "Period seconds for livenessProbe"
            timeoutSeconds: 
              type: "number"
              default: 5
              description: "Timeout seconds for livenessProbe"
            failureThreshold: 
              type: "number"
              default: 3
              description: "Failure threshold for livenessProbe"
            successThreshold: 
              type: "number"
              default: 1
              description: "Success threshold for livenessProbe"
        readinessProbe: 
          type: "object"
          properties: 
            enabled: 
              type: "boolean"
              default: true
              description: "Enable readinessProbe"
            httpGet: 
              type: "object"
              properties: 
                path: 
                  type: "string"
                  default: "/auth/realms/master"
                  description: "Request path for readinessProbe"
                port: 
                  type: "string"
                  default: "http"
                  description: "Port for readinessProbe"
            initialDelaySeconds: 
              type: "number"
              default: 30
              description: "Initial delay seconds for readinessProbe"
            periodSeconds: 
              type: "number"
              default: 10
              description: "Period seconds for readinessProbe"
            timeoutSeconds: 
              type: "number"
              default: 1
              description: "Timeout seconds for readinessProbe"
            failureThreshold: 
              type: "number"
              default: 3
              description: "Failure threshold for readinessProbe"
            successThreshold: 
              type: "number"
              default: 1
              description: "Success threshold for readinessProbe"
        customLivenessProbe: 
          type: "object"
          default: "{}"
          description: "Custom Liveness probes for Keycloak"
        customReadinessProbe: 
          type: "object"
          default: "{}"
          description: "Custom Rediness probes Keycloak"
        updateStrategy: 
          type: "object"
          properties: 
            type: 
              type: "string"
              default: "RollingUpdate"
              description: "StrategyType"
        podAffinityPreset: 
          type: "string"
          default: ""
          description: "Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`"
        podAntiAffinityPreset: 
          type: "string"
          default: "soft"
          description: "Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`"
        nodeAffinityPreset: 
          type: "object"
          properties: 
            type: 
              type: "string"
              default: ""
              description: "Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`"
            key: 
              type: "string"
              default: ""
              description: "Node label key to match. Ignored if `affinity` is set."
            values: 
              type: "array"
              default: "[]"
              description: "Node label values to match. Ignored if `affinity` is set."
        affinity: 
          type: "object"
          default: "{}"
          description: "Affinity for pod assignment"
        nodeSelector: 
          type: "object"
          default: "{}"
          description: "Node labels for pod assignment"
        tolerations: 
          type: "array"
          default: "[]"
          description: "Tolerations for pod assignment"
        podLabels: 
          type: "object"
          default: "{}"
          description: "Extra labels for Keycloak pods"
        podAnnotations: 
          type: "object"
          default: "{}"
          description: "Annotations for Keycloak pods"
        priorityClassName: 
          type: "string"
          default: ""
          description: "Keycloak pods' priority."
        lifecycleHooks: 
          type: "object"
          default: "{}"
          description: "LifecycleHooks to set additional configuration at startup"
        extraVolumes: 
          type: "array"
          default: "[]"
          description: "Optionally specify extra list of additional volumes for Keycloak pods"
        extraVolumeMounts: 
          type: "array"
          default: "[]"
          description: "Optionally specify extra list of additional volumeMounts for Keycloak container(s)"
        initContainers: 
          type: "array"
          default: "[]"
          description: "Add additional init containers to the Keycloak pods"
        sidecars: 
          type: "array"
          default: "[]"
          description: "Add additional sidecar containers to the Keycloak pods"
        service: 
          type: "object"
          properties: 
            type: 
              type: "string"
              default: "LoadBalancer"
              description: "Kubernetes service type"
            port: 
              type: "number"
              default: 80
              description: "Service HTTP port"
            httpsPort: 
              type: "number"
              default: 443
              description: "HTTPS Port"
            nodePorts: 
              type: "object"
              default: "{}"
              description: "Specify the nodePort values for the LoadBalancer and NodePort service types."
            clusterIP: 
              type: "string"
              default: ""
              description: "Keycloak service clusterIP IP"
            loadBalancerIP: 
              type: "string"
              default: ""
              description: "loadBalancerIP for the SuiteCRM Service (optional, cloud specific)"
            loadBalancerSourceRanges: 
              type: "array"
              default: "[]"
              description: "Address that are allowed when service is LoadBalancer"
            externalTrafficPolicy: 
              type: "string"
              default: "Cluster"
              description: "Enable client source IP preservation"
            annotations: 
              type: "object"
              default: "{}"
              description: "Annotations for Keycloak service"
        ingress: 
          type: "object"
          properties: 
            enabled: 
              type: "boolean"
              default: false
              description: "Enable ingress controller resource"
            certManager: 
              type: "boolean"
              default: false
              description: "Add annotations for cert-manager"
            hostname: 
              type: "string"
              default: "keycloak.local"
              description: "Default host for the ingress resource"
            apiVersion: 
              type: "string"
              default: ""
              description: "Force Ingress API version (automatically detected if not set)"
            ingressClassName: 
              type: "string"
              default: ""
              description: "IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)"
            path: 
              type: "string"
              default: "/"
              description: "Ingress path"
            pathType: 
              type: "string"
              default: "ImplementationSpecific"
              description: "Ingress path type"
            annotations: 
              type: "object"
              default: "{}"
              description: "Ingress annotations"
            tls: 
              type: "boolean"
              default: false
              description: "Enable TLS configuration for the hostname defined at `ingress.hostname` parameter"
            extraHosts: 
              type: "array"
              default: "[]"
              description: "The list of additional hostnames to be covered with this ingress record."
            extraTls: 
              type: "array"
              default: "[]"
              description: "The tls configuration for additional hostnames to be covered with this ingress record."
            secrets: 
              type: "array"
              default: "[]"
              description: "If you're providing your own certificates, please use this to add the certificates as secrets"
            existingSecret: 
              type: "string"
              default: ""
              description: "It is you own the certificate as secret."
            servicePort: 
              type: "string"
              default: "http"
              description: "Service port to be used"
        networkPolicy: 
          type: "object"
          properties: 
            enabled: 
              type: "boolean"
              default: false
              description: "Enable the default NetworkPolicy policy"
            allowExternal: 
              type: "boolean"
              default: true
              description: "Don't require client label for connections"
            additionalRules: 
              type: "object"
              default: "{}"
              description: "Additional NetworkPolicy rules"
        serviceAccount: 
          type: "object"
          properties: 
            create: 
              type: "boolean"
              default: true
              description: "Enable the creation of a ServiceAccount for Keycloak pods"
            name: 
              type: "string"
              default: ""
              description: "Name of the created ServiceAccount"
        rbac: 
          type: "object"
          properties: 
            create: 
              type: "boolean"
              default: false
              description: "Whether to create and use RBAC resources or not"
            rules: 
              type: "array"
              default: "[]"
              description: "Custom RBAC rules"
        pdb: 
          type: "object"
          properties: 
            create: 
              type: "boolean"
              default: false
              description: "Enable/disable a Pod Disruption Budget creation"
            minAvailable: 
              type: "number"
              default: 1
              description: "Minimum number/percentage of pods that should remain scheduled"
            maxUnavailable: 
              type: "string"
              default: ""
              description: "Maximum number/percentage of pods that may be made unavailable"
        autoscaling: 
          type: "object"
          properties: 
            enabled: 
              type: "boolean"
              default: false
              description: "Enable autoscaling for Keycloak"
            minReplicas: 
              type: "number"
              default: 1
              description: "Minimum number of Keycloak replicas"
            maxReplicas: 
              type: "number"
              default: 11
              description: "Maximum number of Keycloak replicas"
            targetCPU: 
              type: "string"
              default: ""
              description: "Target CPU utilization percentage"
            targetMemory: 
              type: "string"
              default: ""
              description: "Target Memory utilization percentage"
        metrics: 
          type: "object"
          properties: 
            enabled: 
              type: "boolean"
              default: false
              description: "Enable exposing Keycloak statistics"
            service: 
              type: "object"
              properties: 
                port: 
                  type: "number"
                  default: 9990
                  description: "Service HTTP management port"
                annotations: 
                  type: "object"
                  default: "{}"
                  description: "Annotations for enabling prometheus to access the metrics endpoints"
            serviceMonitor: 
              type: "object"
              properties: 
                enabled: 
                  type: "boolean"
                  default: false
                  description: "Create ServiceMonitor Resource for scraping metrics using PrometheusOperator"
                namespace: 
                  type: "string"
                  default: ""
                  description: "Namespace which Prometheus is running in"
                interval: 
                  type: "string"
                  default: "30s"
                  description: "Interval at which metrics should be scraped"
                scrapeTimeout: 
                  type: "string"
                  default: ""
                  description: "Specify the timeout after which the scrape is ended"
                relabellings: 
                  type: "array"
                  default: "[]"
                  description: "Specify Metric Relabellings to add to the scrape endpoint"
                honorLabels: 
                  type: "boolean"
                  default: false
                  description: "honorLabels chooses the metric's labels on collisions with target labels"
                additionalLabels: 
                  type: "object"
                  default: "{}"
                  description: "Used to pass Labels that are required by the installed Prometheus Operator"
        postgresql: 
          type: "object"
          properties: 
            enabled: 
              type: "boolean"
              default: true
              description: "Deploy a PostgreSQL server to satisfy the applications database requirements"
            postgresqlUsername: 
              type: "string"
              default: "bn_keycloak"
              description: "Keycloak PostgreSQL user (has superuser privileges if username is `postgres`)"
            postgresqlPassword: 
              type: "string"
              default: ""
              description: "Keycloak PostgreSQL password - ignored if existingSecret is provided"
            postgresqlDatabase: 
              type: "string"
              default: "bitnami_keycloak"
              description: "Name of the database to create"
            existingSecret: 
              type: "string"
              default: ""
              description: "Use an existing secret file with the PostgreSQL password"
            persistence: 
              type: "object"
              properties: 
                enabled: 
                  type: "boolean"
                  default: true
                  description: "Enable PostgreSQL persistence using PVC"
        externalDatabase: 
          type: "object"
          properties: 
            host: 
              type: "string"
              default: ""
              description: "Host of the external database"
            port: 
              type: "number"
              default: 5432
              description: "Database port"
            user: 
              type: "string"
              default: "bn_keycloak"
              description: "non admin username for Keycloak Database"
            password: 
              type: "string"
              default: ""
              description: "Database password"
            database: 
              type: "string"
              default: "bitnami_keycloak"
              description: "Database name"
            existingSecret: 
              type: "string"
              default: ""
              description: "Use an existing secret file with the external PostgreSQL credentials"
  template:
    spec:
      fetch:
      - helmChart:
          name: keycloak
          version: "5.0.7"
          repository:
            url: https://charts.bitnami.com/bitnami
      template:
      - helmTemplate: {}
      deploy:
      - kapp:
          delete:
            rawOptions: ["--apply-ignored=true"]
