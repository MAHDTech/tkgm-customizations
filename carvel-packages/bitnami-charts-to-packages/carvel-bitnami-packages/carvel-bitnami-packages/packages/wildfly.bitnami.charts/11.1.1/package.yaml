---
apiVersion: data.packaging.carvel.dev/v1alpha1
kind: Package
metadata:
  name: wildfly.bitnami.charts.11.1.1
spec:
  refName: wildfly.bitnami.charts
  version: 11.1.1
  releaseNotes: |
        Chart for Wildfly
  valuesSchema:
    openAPIv3:
      title: "Chart Values"
      type: "object"
      properties: 
        global: 
          type: "object"
          properties: 
            imageRegistry: 
              type: "string"
              default: ""
              description: "Global Docker image registry"
            imagePullSecrets: 
              type: "array"
              default: "[]"
              description: "Global Docker registry secret names as an array"
            storageClass: 
              type: "string"
              default: ""
              description: "Global StorageClass for Persistent Volume(s)"
        kubeVersion: 
          type: "string"
          default: ""
          description: "Override Kubernetes version"
        nameOverride: 
          type: "string"
          default: ""
          description: "String to partially override common.names.fullname"
        fullnameOverride: 
          type: "string"
          default: ""
          description: "String to fully override common.names.fullname"
        commonLabels: 
          type: "object"
          default: "{}"
          description: "Labels to add to all deployed objects"
        commonAnnotations: 
          type: "object"
          default: "{}"
          description: "Annotations to add to all deployed objects"
        clusterDomain: 
          type: "string"
          default: "cluster.local"
          description: "Kubernetes cluster domain name"
        extraDeploy: 
          type: "array"
          default: "[]"
          description: "Array of extra objects to deploy with the release"
        image: 
          type: "object"
          properties: 
            registry: 
              type: "string"
              default: "docker.io"
              description: "WildFly image registry"
            repository: 
              type: "string"
              default: "bitnami/wildfly"
              description: "WildFly image repository"
            tag: 
              type: "string"
              default: "24.0.1-debian-10-r27"
              description: "WildFly image tag (immutable tags are recommended)"
            pullPolicy: 
              type: "string"
              default: "IfNotPresent"
              description: "WildFly image pull policy"
            pullSecrets: 
              type: "array"
              default: "[]"
              description: "WildFly image pull secrets"
            debug: 
              type: "boolean"
              default: false
              description: "Enable image debug mode"
        wildflyUsername: 
          type: "string"
          default: "user"
          description: "WildFly username"
        wildflyPassword: 
          type: "string"
          default: ""
          description: "WildFly user password"
        exposeManagementConsole: 
          type: "boolean"
          default: false
          description: "Allows exposing the WildFly Management console outside the cluster"
        command: 
          type: "array"
          default: "[]"
          description: "Override default container command (useful when using custom images)"
        args: 
          type: "array"
          default: "[]"
          description: "Override default container args (useful when using custom images)"
        extraEnvVars: 
          type: "array"
          default: "[]"
          description: "Array with extra environment variables to add to the WildFly container"
        extraEnvVarsCM: 
          type: "string"
          default: ""
          description: "Name of existing ConfigMap containing extra env vars"
        extraEnvVarsSecret: 
          type: "string"
          default: ""
          description: "Name of existing Secret containing extra env vars"
        replicaCount: 
          type: "number"
          default: 1
          description: "Number of Wildfly replicas to deploy"
        updateStrategy: 
          type: "object"
          properties: 
            type: 
              type: "string"
              default: "RollingUpdate"
              description: "WildFly deployment strategy type"
        hostAliases: 
          type: "array"
          default: "[]"
          description: "WildFly pod host aliases"
        extraVolumes: 
          type: "array"
          default: "[]"
          description: "Optionally specify extra list of additional volumes for WildFly pods"
        extraVolumeMounts: 
          type: "array"
          default: "[]"
          description: "Optionally specify extra list of additional volumeMounts for WildFly container(s)"
        sidecars: 
          type: "array"
          default: "[]"
          description: "Add additional sidecar containers to the WildFly pod"
        initContainers: 
          type: "array"
          default: "[]"
          description: "Add additional init containers to the WildFly pods"
        podLabels: 
          type: "object"
          default: "{}"
          description: "Extra labels for WildFly pods"
        podAnnotations: 
          type: "object"
          default: "{}"
          description: "Annotations for WildFly pods"
        podAffinityPreset: 
          type: "string"
          default: ""
          description: "Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`"
        podAntiAffinityPreset: 
          type: "string"
          default: "soft"
          description: "Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`"
        nodeAffinityPreset: 
          type: "object"
          properties: 
            type: 
              type: "string"
              default: ""
              description: "Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`"
            key: 
              type: "string"
              default: ""
              description: "Node label key to match. Ignored if `affinity` is set"
            values: 
              type: "array"
              default: "[]"
              description: "Node label values to match. Ignored if `affinity` is set"
        affinity: 
          type: "object"
          default: "{}"
          description: "Affinity for pod assignment"
        nodeSelector: 
          type: "object"
          default: "{}"
          description: "Node labels for pod assignment"
        tolerations: 
          type: "object"
          default: "{}"
          description: "Tolerations for pod assignment"
        resources: 
          type: "object"
          properties: 
            limits: 
              type: "object"
              default: "{}"
              description: "The resources limits for the WildFly container"
            requests: 
              type: "object"
              default: "{}"
              description: "The requested resources for the WildFly container"
        containerPorts: 
          type: "object"
          properties: 
            http: 
              type: "number"
              default: 8080
              description: "WildFly HTTP container port"
            mgmt: 
              type: "number"
              default: 9990
              description: "WildFly HTTPS container port"
        podSecurityContext: 
          type: "object"
          properties: 
            enabled: 
              type: "boolean"
              default: true
              description: "Enabled WildFly pods' Security Context"
            fsGroup: 
              type: "number"
              default: 1001
              description: "Set WildFly pod's Security Context fsGroup"
        containerSecurityContext: 
          type: "object"
          properties: 
            enabled: 
              type: "boolean"
              default: true
              description: "Enabled WildFly containers' Security Context"
            runAsUser: 
              type: "number"
              default: 1001
              description: "Set WildFly container's Security Context runAsUser"
            runAsNonRoot: 
              type: "boolean"
              default: true
              description: "Set WildFly container's Security Context runAsNonRoot"
        livenessProbe: 
          type: "object"
          properties: 
            enabled: 
              type: "boolean"
              default: true
              description: "Enable livenessProbe"
            initialDelaySeconds: 
              type: "number"
              default: 120
              description: "Initial delay seconds for livenessProbe"
            periodSeconds: 
              type: "number"
              default: 10
              description: "Period seconds for livenessProbe"
            timeoutSeconds: 
              type: "number"
              default: 5
              description: "Timeout seconds for livenessProbe"
            failureThreshold: 
              type: "number"
              default: 6
              description: "Failure threshold for livenessProbe"
            successThreshold: 
              type: "number"
              default: 1
              description: "Success threshold for livenessProbe"
        readinessProbe: 
          type: "object"
          properties: 
            enabled: 
              type: "boolean"
              default: true
              description: "Enable readinessProbe"
            initialDelaySeconds: 
              type: "number"
              default: 30
              description: "Initial delay seconds for readinessProbe"
            periodSeconds: 
              type: "number"
              default: 5
              description: "Period seconds for readinessProbe"
            timeoutSeconds: 
              type: "number"
              default: 3
              description: "Timeout seconds for readinessProbe"
            failureThreshold: 
              type: "number"
              default: 3
              description: "Failure threshold for readinessProbe"
            successThreshold: 
              type: "number"
              default: 1
              description: "Success threshold for readinessProbe"
        customLivenessProbe: 
          type: "object"
          default: "{}"
          description: "Custom livenessProbe that overrides the default one"
        customReadinessProbe: 
          type: "object"
          default: "{}"
          description: "Custom readinessProbe that overrides the default one"
        service: 
          type: "object"
          properties: 
            type: 
              type: "string"
              default: "LoadBalancer"
              description: "WildFly service type"
            port: 
              type: "number"
              default: 80
              description: "WildFly service HTTP port"
            mgmtPort: 
              type: "number"
              default: 9990
              description: "WildFly service management console port"
            nodePorts: 
              type: "object"
              properties: 
                http: 
                  type: "string"
                  default: ""
                  description: "Node port for HTTP"
                mgmt: 
                  type: "string"
                  default: ""
                  description: "Node port for Management console"
            clusterIP: 
              type: "string"
              default: ""
              description: "WildFly service Cluster IP"
            loadBalancerIP: 
              type: "string"
              default: ""
              description: "WildFly service Load Balancer IP"
            loadBalancerSourceRanges: 
              type: "array"
              default: "[]"
              description: "WildFly service Load Balancer sources"
            externalTrafficPolicy: 
              type: "string"
              default: "Cluster"
              description: "WildFly service external traffic policy"
            annotations: 
              type: "object"
              default: "{}"
              description: "Additional custom annotations for WildFly service"
            extraPorts: 
              type: "array"
              default: "[]"
              description: "Extra ports to expose on WildFly service"
        ingress: 
          type: "object"
          properties: 
            enabled: 
              type: "boolean"
              default: false
              description: "Enable ingress record generation for WildFly"
            certManager: 
              type: "boolean"
              default: false
              description: "Add the corresponding annotations for cert-manager integration"
            pathType: 
              type: "string"
              default: "ImplementationSpecific"
              description: "Ingress path type"
            apiVersion: 
              type: "string"
              default: ""
              description: "Force Ingress API version (automatically detected if not set)"
            hostname: 
              type: "string"
              default: "wildfly.local"
              description: "Default host for the ingress record"
            path: 
              type: "string"
              default: "/"
              description: "Default path for the ingress record"
            annotations: 
              type: "object"
              default: "{}"
              description: "Additional custom annotations for the ingress record"
            tls: 
              type: "boolean"
              default: false
              description: "Enable TLS configuration for the host defined at `ingress.hostname` parameter"
            extraHosts: 
              type: "array"
              default: "[]"
              description: "An array with additional hostname(s) to be covered with the ingress record"
            extraPaths: 
              type: "array"
              default: "[]"
              description: "An array with additional arbitrary paths that may need to be added to the ingress under the main host"
            extraTls: 
              type: "array"
              default: "[]"
              description: "TLS configuration for additional hostname(s) to be covered with this ingress record"
            secrets: 
              type: "array"
              default: "[]"
              description: "Custom TLS certificates as secrets"
        mgmtIngress: 
          type: "object"
          properties: 
            enabled: 
              type: "boolean"
              default: false
              description: "Set to true to enable ingress record generation for the Management console"
            certManager: 
              type: "boolean"
              default: false
              description: "Set this to true in order to add the corresponding annotations for cert-manager"
            pathType: 
              type: "string"
              default: "ImplementationSpecific"
              description: "Ingress path type"
            hostname: 
              type: "string"
              default: "management.local"
              description: "When the Management ingress is enabled, a host pointing to this will be created"
            annotations: 
              type: "object"
              default: "{}"
              description: "Health Ingress annotations"
            tls: 
              type: "boolean"
              default: false
              description: "Enable TLS configuration for the hostname defined at `mgmtIngress.hostname` parameter"
            extraHosts: 
              type: "array"
              default: "[]"
              description: "The list of additional hostnames to be covered with this Management ingress record"
            extraPaths: 
              type: "array"
              default: "[]"
              description: "An array with additional arbitrary paths that may need to be added to the ingress under the main host"
            extraTls: 
              type: "array"
              default: "[]"
              description: "TLS configuration for additional hostnames to be covered"
            secrets: 
              type: "array"
              default: "[]"
              description: "TLS Secret configuration"
        persistence: 
          type: "object"
          properties: 
            enabled: 
              type: "boolean"
              default: true
              description: "Enable persistence using Persistent Volume Claims"
            storageClass: 
              type: "string"
              default: ""
              description: "Persistent Volume storage class"
            accessModes: 
              type: "array"
              default: "[]"
              description: "Persistent Volume access modes"
            size: 
              type: "string"
              default: "8Gi"
              description: "Persistent Volume size"
        volumePermissions: 
          type: "object"
          properties: 
            enabled: 
              type: "boolean"
              default: false
              description: "Enable init container that changes the owner/group of the PV mount point to `runAsUser:fsGroup`"
            image: 
              type: "object"
              properties: 
                registry: 
                  type: "string"
                  default: "docker.io"
                  description: "Bitnami Shell image registry"
                repository: 
                  type: "string"
                  default: "bitnami/bitnami-shell"
                  description: "Bitnami Shell image repository"
                tag: 
                  type: "string"
                  default: "10-debian-10-r171"
                  description: "Bitnami Shell image tag (immutable tags are recommended)"
                pullPolicy: 
                  type: "string"
                  default: "Always"
                  description: "Bitnami Shell image pull policy"
                pullSecrets: 
                  type: "array"
                  default: "[]"
                  description: "Bitnami Shell image pull secrets"
            resources: 
              type: "object"
              properties: 
                limits: 
                  type: "object"
                  default: "{}"
                  description: "The resources limits for the init container"
                requests: 
                  type: "object"
                  default: "{}"
                  description: "The requested resources for the init container"
            securityContext: 
              type: "object"
              properties: 
                runAsUser: 
                  type: "number"
                  default: 0
                  description: "Set init container's Security Context runAsUser"
  template:
    spec:
      fetch:
      - helmChart:
          name: wildfly
          version: "11.1.1"
          repository:
            url: https://charts.bitnami.com/bitnami
      template:
      - helmTemplate: {}
      deploy:
      - kapp:
          delete:
            rawOptions: ["--apply-ignored=true"]
