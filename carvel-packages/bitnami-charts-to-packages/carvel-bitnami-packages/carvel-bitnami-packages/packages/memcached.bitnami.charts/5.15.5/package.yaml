---
apiVersion: data.packaging.carvel.dev/v1alpha1
kind: Package
metadata:
  name: memcached.bitnami.charts.5.15.5
spec:
  refName: memcached.bitnami.charts
  version: 5.15.5
  releaseNotes: |
        Chart for Memcached
  valuesSchema:
    openAPIv3:
      title: "Chart Values"
      type: "object"
      properties: 
        global: 
          type: "object"
          properties: 
            imageRegistry: 
              type: "string"
              default: ""
              description: "Global Docker image registry"
            imagePullSecrets: 
              type: "array"
              default: "[]"
              description: "Global Docker registry secret names as an array"
            storageClass: 
              type: "string"
              default: ""
              description: "Global StorageClass for Persistent Volume(s)"
        nameOverride: 
          type: "string"
          default: ""
          description: "String to partially override common.names.fullname template (will maintain the release name)"
        fullnameOverride: 
          type: "string"
          default: ""
          description: "String to fully override common.names.fullname template"
        commonLabels: 
          type: "object"
          default: "{}"
          description: "Labels to add to all deployed objects"
        commonAnnotations: 
          type: "object"
          default: "{}"
          description: "Annotations to add to all deployed objects"
        clusterDomain: 
          type: "string"
          default: "cluster.local"
          description: "Default Kubernetes cluster domain"
        extraDeploy: 
          type: "array"
          default: "[]"
          description: "Array of extra objects to deploy with the release"
        image: 
          type: "object"
          properties: 
            registry: 
              type: "string"
              default: "docker.io"
              description: "Memcached image registry"
            repository: 
              type: "string"
              default: "bitnami/memcached"
              description: "Memcached image repository"
            tag: 
              type: "string"
              default: "1.6.12-debian-10-r0"
              description: "Memcached image tag (immutable tags are recommended)"
            pullPolicy: 
              type: "string"
              default: "IfNotPresent"
              description: "Memcached image pull policy"
            pullSecrets: 
              type: "array"
              default: "[]"
              description: "Specify docker-registry secret names as an array"
            debug: 
              type: "boolean"
              default: false
              description: "Enable image debug mode"
        architecture: 
          type: "string"
          default: "standalone"
          description: "Memcached architecture. Allowed values: standalone or high-availability"
        hostAliases: 
          type: "array"
          default: "[]"
          description: "Add deployment host aliases"
        memcachedUsername: 
          type: "string"
          default: ""
          description: "Memcached admin user"
        memcachedPassword: 
          type: "string"
          default: ""
          description: "Memcached admin password"
        replicaCount: 
          type: "number"
          default: 1
          description: "Number of containers"
        command: 
          type: "array"
          default: "[]"
          description: "Default container command (useful when using custom images)"
        arguments: 
          type: "array"
          default: "[\"/run.sh\"]"
          description: "Default container args (useful when using custom images)"
        extraEnv: 
          type: "array"
          default: "[]"
          description: "Additional env vars to pass"
        podDisruptionBudget: 
          type: "object"
          properties: 
            create: 
              type: "boolean"
              default: false
              description: "Specifies whether a Pod disruption budget should be created"
            minAvailable: 
              type: "string"
              default: ""
              description: "Minimum number of pods that need to be available"
            maxUnavailable: 
              type: "number"
              default: 1
              description: "Maximum number of pods that can be unavailable"
        service: 
          type: "object"
          properties: 
            type: 
              type: "string"
              default: "ClusterIP"
              description: "Kubernetes service type for Memcached"
            port: 
              type: "number"
              default: 11211
              description: "Memcached service port"
            nodePort: 
              type: "string"
              default: ""
              description: "Kubernetes Service nodePort"
            loadBalancerIP: 
              type: "string"
              default: ""
              description: "`loadBalancerIP` if service type is `LoadBalancer`"
            annotations: 
              type: "object"
              default: "{}"
              description: "Additional annotations for Memcached service"
        autoscaling: 
          type: "object"
          properties: 
            enabled: 
              type: "boolean"
              default: false
              description: "Enable memcached statefulset autoscaling (requires architecture: \"high-availability\")"
            minReplicas: 
              type: "number"
              default: 3
              description: "memcached statefulset autoscaling minimum number of replicas"
            maxReplicas: 
              type: "number"
              default: 6
              description: "memcached statefulset autoscaling maximum number of replicas"
            targetCPU: 
              type: "number"
              default: 50
              description: "memcached statefulset autoscaling target CPU percentage"
            targetMemory: 
              type: "number"
              default: 50
              description: "memcached statefulset autoscaling target CPU memory"
        resources: 
          type: "object"
          properties: 
            limits: 
              type: "object"
              default: "{}"
              description: "CPU/Memory resource limits"
            requests: 
              type: "object"
              default: "{}"
              description: "CPU/Memory resource requests"
        portName: 
          type: "string"
          default: "memcache"
          description: "Name of the main port exposed by memcached"
        securityContext: 
          type: "object"
          properties: 
            enabled: 
              type: "boolean"
              default: true
              description: "Enable security context"
            fsGroup: 
              type: "number"
              default: 1001
              description: "Group ID for the container"
            runAsUser: 
              type: "number"
              default: 1001
              description: "User ID for the container"
            readOnlyRootFilesystem: 
              type: "boolean"
              default: false
              description: "Enable read-only filesystem"
        podLabels: 
          type: "object"
          default: "{}"
          description: "Pod extra labels"
        podAnnotations: 
          type: "object"
          default: "{}"
          description: "Pod annotations"
        podAffinityPreset: 
          type: "string"
          default: ""
          description: "Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`"
        podAntiAffinityPreset: 
          type: "string"
          default: "soft"
          description: "Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`"
        nodeAffinityPreset: 
          type: "object"
          properties: 
            type: 
              type: "string"
              default: ""
              description: "Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`"
            key: 
              type: "string"
              default: ""
              description: "Node label key to match. Ignored if `affinity` is set."
            values: 
              type: "array"
              default: "[]"
              description: "Node label values to match. Ignored if `affinity` is set."
        affinity: 
          type: "object"
          default: "{}"
          description: "Affinity for pod assignment"
        nodeSelector: 
          type: "object"
          default: "{}"
          description: "Node labels for pod assignment"
        tolerations: 
          type: "array"
          default: "[]"
          description: "Tolerations for pod assignment"
        topologySpreadConstraints: 
          type: "object"
          default: "{}"
          description: "Topology Spread Constraints for pod assignment spread across your cluster among failure-domains"
        priorityClassName: 
          type: "string"
          default: ""
          description: "Pod priority"
        initContainers: 
          type: "array"
          default: "[]"
          description: "Add additional init containers to the Memcached pod"
        sidecars: 
          type: "array"
          default: "[]"
          description: "Add additional sidecar containers to the Memcached pod"
        serviceAccount: 
          type: "object"
          properties: 
            create: 
              type: "boolean"
              default: true
              description: "Enable creation of ServiceAccount for memcached pods"
            name: 
              type: "string"
              default: ""
              description: "The name of the ServiceAccount to use."
            automountServiceAccountToken: 
              type: "boolean"
              default: true
              description: "Enable/disable auto mounting of the service account token"
        persistence: 
          type: "object"
          properties: 
            enabled: 
              type: "boolean"
              default: false
              description: "Enable persistence using PVC (Requires architecture: \"high-availability\")"
            storageClass: 
              type: "string"
              default: ""
              description: "PVC Storage Class for Memcached volume"
            annotations: 
              type: "object"
              default: "{}"
              description: "Persistent Volume Claim annotations"
            accessModes: 
              type: "array"
              default: "[\"ReadWriteOnce\"]"
              description: "Persistent Volume Access Mode"
            size: 
              type: "string"
              default: "8Gi"
              description: "PVC Storage Request for Memcached volume"
        metrics: 
          type: "object"
          properties: 
            enabled: 
              type: "boolean"
              default: false
              description: "Start a side-car prometheus exporter"
            image: 
              type: "object"
              properties: 
                registry: 
                  type: "string"
                  default: "docker.io"
                  description: "Memcached exporter image registry"
                repository: 
                  type: "string"
                  default: "bitnami/memcached-exporter"
                  description: "Memcached exporter image repository"
                tag: 
                  type: "string"
                  default: "0.9.0-debian-10-r171"
                  description: "Memcached exporter image tag (immutable tags are recommended)"
                pullPolicy: 
                  type: "string"
                  default: "IfNotPresent"
                  description: "Image pull policy"
                pullSecrets: 
                  type: "array"
                  default: "[]"
                  description: "Specify docker-registry secret names as an array"
            podAnnotations: 
              type: "object"
              default: "{}"
              description: "Metrics exporter pod Annotation and Labels"
            portName: 
              type: "string"
              default: "metrics"
              description: "Memcached exporter port name"
            resources: 
              type: "object"
              properties: 
                limits: 
                  type: "object"
                  default: "{}"
                  description: "The resources limits for the container"
                requests: 
                  type: "object"
                  default: "{}"
                  description: "The requested resources for the container"
            livenessProbe: 
              type: "object"
              properties: 
                enabled: 
                  type: "boolean"
                  default: true
                  description: "Enable livenessProbe"
                initialDelaySeconds: 
                  type: "number"
                  default: 15
                  description: "Initial delay seconds for livenessProbe"
                periodSeconds: 
                  type: "number"
                  default: 10
                  description: "Period seconds for livenessProbe"
                timeoutSeconds: 
                  type: "number"
                  default: 5
                  description: "Timeout seconds for livenessProbe"
                failureThreshold: 
                  type: "number"
                  default: 3
                  description: "Failure threshold for livenessProbe"
                successThreshold: 
                  type: "number"
                  default: 1
                  description: "Success threshold for livenessProbe"
            readinessProbe: 
              type: "object"
              properties: 
                enabled: 
                  type: "boolean"
                  default: true
                  description: "Enable readinessProbe"
                initialDelaySeconds: 
                  type: "number"
                  default: 5
                  description: "Initial delay seconds for readinessProbe"
                periodSeconds: 
                  type: "number"
                  default: 10
                  description: "Period seconds for readinessProbe"
                timeoutSeconds: 
                  type: "number"
                  default: 1
                  description: "Timeout seconds for readinessProbe"
                failureThreshold: 
                  type: "number"
                  default: 3
                  description: "Failure threshold for readinessProbe"
                successThreshold: 
                  type: "number"
                  default: 1
                  description: "Success threshold for readinessProbe"
            service: 
              type: "object"
              properties: 
                type: 
                  type: "string"
                  default: "ClusterIP"
                  description: "Kubernetes service type for Prometheus metrics"
                port: 
                  type: "number"
                  default: 9150
                  description: "Prometheus metrics service port"
                annotations: 
                  type: "object"
                  default: "{}"
                  description: "Annotations for the Prometheus metrics service"
            serviceMonitor: 
              type: "object"
              properties: 
                enabled: 
                  type: "boolean"
                  default: false
                  description: "Create ServiceMonitor resource(s) for scraping metrics using PrometheusOperator"
                namespace: 
                  type: "string"
                  default: ""
                  description: "The namespace in which the ServiceMonitor will be created"
                interval: 
                  type: "string"
                  default: ""
                  description: "The interval at which metrics should be scraped"
                scrapeTimeout: 
                  type: "string"
                  default: ""
                  description: "The timeout after which the scrape is ended"
                selector: 
                  type: "object"
                  default: "{}"
                  description: "Additional labels for ServiceMonitor resource"
                metricRelabelings: 
                  type: "array"
                  default: "[]"
                  description: "MetricRelabelConfigs to apply to samples before ingestion"
                relabelings: 
                  type: "array"
                  default: "[]"
                  description: "Metrics relabelings to add to the scrape endpoint, applied before scraping"
        volumePermissions: 
          type: "object"
          properties: 
            image: 
              type: "object"
              properties: 
                registry: 
                  type: "string"
                  default: "docker.io"
                  description: "Init container volume-permissions image registry"
                repository: 
                  type: "string"
                  default: "bitnami/bitnami-shell"
                  description: "Init container volume-permissions image repository"
                tag: 
                  type: "string"
                  default: "10-debian-10-r206"
                  description: "Init container volume-permissions image tag (immutable tags are recommended)"
                pullPolicy: 
                  type: "string"
                  default: "Always"
                  description: "Init container volume-permissions image pull policy"
                pullSecrets: 
                  type: "array"
                  default: "[]"
                  description: "Specify docker-registry secret names as an array"
            resources: 
              type: "object"
              properties: 
                limits: 
                  type: "object"
                  default: "{}"
                  description: "Init container volume-permissions resource limits"
                requests: 
                  type: "object"
                  default: "{}"
                  description: "Init container volume-permissions resource requests"
  template:
    spec:
      fetch:
      - helmChart:
          name: memcached
          version: "5.15.5"
          repository:
            url: https://charts.bitnami.com/bitnami
      template:
      - helmTemplate: {}
      deploy:
      - kapp:
          delete:
            rawOptions: ["--apply-ignored=true"]
